# Geopolitical Risk Assessment API Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# OpenAI API Key (REQUIRED)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# OPTIONAL API KEYS
# =============================================================================

# NewsAPI Key (Optional - for real-time news intelligence)
# Get your API key from: https://newsapi.org/register
# If not provided, will use mock/cached news data
NEWSAPI_KEY=your_newsapi_key_here

# Anthropic API Key (Optional - backup LLM service)  
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_key_here

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server port (default: 8001)
PORT=8001

# Debug mode (true/false)
DEBUG=false

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================

# OpenAI model to use for assessments
# Options: gpt-4, gpt-4-turbo, gpt-4-1106-preview, gpt-3.5-turbo
OPENAI_MODEL=gpt-4-1106-preview

# Model temperature (0.0-2.0, lower = more deterministic)
OPENAI_TEMPERATURE=0.3

# Maximum tokens for AI responses
OPENAI_MAX_TOKENS=2000

# Request timeout for OpenAI API (seconds)
OPENAI_REQUEST_TIMEOUT=90

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Redis URL for caching (optional)
# Format: redis://localhost:6379 or redis://user:pass@host:port/db
REDIS_URL=redis://localhost:6379

# Cache TTL settings (seconds)
CACHE_COUNTRY_RISK_TTL=7200    # 2 hours
CACHE_ROUTE_ANALYSIS_TTL=3600  # 1 hour  
NEWS_CACHE_TTL=1800            # 30 minutes

# =============================================================================
# NEWS & INTELLIGENCE CONFIGURATION
# =============================================================================

# Enable web scraping for additional intelligence (use with caution)
ENABLE_WEB_SCRAPING=false

# Maximum news results to process per query
MAX_NEWS_RESULTS=50

# News API request timeout (seconds)
NEWS_REQUEST_TIMEOUT=30

# Use mock news data for development/testing
MOCK_NEWS_DATA=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Internal API key for service authentication (optional)
INTERNAL_API_KEY=your_internal_api_key_here

# API key header name
API_KEY_HEADER=X-API-Key

# =============================================================================
# PERFORMANCE CONFIGURATION  
# =============================================================================

# Rate limiting (requests per minute per IP)
RATE_LIMIT_REQUESTS=100

# Maximum concurrent external API requests
MAX_CONCURRENT_REQUESTS=10

# Request retry configuration
REQUEST_RETRY_ATTEMPTS=3
REQUEST_BACKOFF_FACTOR=2.0

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins (comma-separated)
# Use "*" for development, specific domains for production
ALLOWED_ORIGINS=*

# Allowed HTTP methods
ALLOWED_METHODS=GET,POST,OPTIONS

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable fallback assessments when primary services fail
FALLBACK_MODE_ENABLED=true

# Require news intelligence for assessments (may cause failures if disabled)
REQUIRE_NEWS_INTELLIGENCE=false

# Enable detailed logging for debugging
ENABLE_DETAILED_LOGGING=false

# Enable request/response logging
LOG_REQUESTS=true

# =============================================================================
# RISK ASSESSMENT CONFIGURATION
# =============================================================================

# Default risk score when assessment fails (1-10)
DEFAULT_RISK_SCORE=5

# Maximum number of risk events to return in response
MAX_RISK_EVENTS=10

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Host address (0.0.0.0 for Docker, localhost for local development)
HOST=0.0.0.0

# Application name
APP_NAME=Shipping Geopolitical Risk Assessment API

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Enable development features (auto-reload, detailed errors)
DEVELOPMENT_MODE=false

# Database URL (if using database for caching/storage)
# DATABASE_URL=postgresql://user:pass@localhost/dbname

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn-here

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Minimal configuration for local development:
# OPENAI_API_KEY=sk-your-key-here
# DEBUG=true
# MOCK_NEWS_DATA=true

# Production configuration example:
# OPENAI_API_KEY=sk-your-production-key
# NEWSAPI_KEY=your-newsapi-key
# REDIS_URL=redis://prod-redis:6379
# DEBUG=false
# LOG_LEVEL=INFO
# ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com
# INTERNAL_API_KEY=your-secure-api-key
# SENTRY_DSN=https://your-sentry-dsn

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit .env files to version control
# 2. Use strong, unique API keys in production
# 3. Configure proper CORS origins for production
# 4. Enable Redis caching for production deployments
# 5. Monitor API usage and costs, especially OpenAI API calls
# 6. Set up proper logging and monitoring in production
# 7. Test thoroughly with different route combinations
# 8. Consider implementing API key authentication for production use